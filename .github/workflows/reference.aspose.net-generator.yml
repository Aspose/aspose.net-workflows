name: reference.aspose.net-generator

on:
  workflow_dispatch:
    inputs:
      products:
        description: "Comma-separated list of products (e.g., Aspose.Words,Aspose.PDF) or 'all'"
        required: true
        default: "all"
  schedule:
    - cron: "0 0 1 * *" # Runs on the 1st of every month

jobs:
  detect-updates:
    runs-on: windows-latest
    outputs:
      to_process: ${{ steps.filter.outputs.to_process }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: python -m pip install requests

      - name: Fetch Latest Versions from NuGet
        id: check_versions
        run: python scripts/check_versions.py

      - name: Filter Products for Processing
        id: filter
        shell: pwsh
        run: |
          Write-Host "DEBUG: Received products input: ${{ github.event.inputs.products }}"

          $PRODUCTS = "${{ github.event.inputs.products }}"
          if ($PRODUCTS -eq "all") {
            $PRODUCTS = (Get-Content reference/status.json | ConvertFrom-Json | Get-Member -MemberType NoteProperty | Select-Object -ExpandProperty Name) -join ","
          }

          Write-Host "DEBUG: Processing products: $PRODUCTS"

          # Run detect_updates.py to determine products needing updates
          $TO_PROCESS = python scripts/detect_updates.py "$PRODUCTS"

          Write-Host "DEBUG: Raw JSON from detect_updates.py:"
          Write-Host "$TO_PROCESS"

          # Validate JSON output
          try {
              $parsedJson = ConvertFrom-Json -InputObject $TO_PROCESS -ErrorAction Stop
              if ($parsedJson.Count -gt 0) {
                  $JSON_OUTPUT = $TO_PROCESS
                  Write-Host "DEBUG: JSON is valid."
              } else {
                  Write-Host "DEBUG: JSON is empty."
                  $JSON_OUTPUT = "[]"
              }
          } catch {
              Write-Host "DEBUG: JSON is NOT valid."
              $JSON_OUTPUT = "[]"
          }

          Write-Host "DEBUG: Final JSON Output Passed to GitHub Actions:"
          Write-Host "$JSON_OUTPUT"

          # Correctly store in GitHub Actions environment variable
          Write-Output "to_process=$JSON_OUTPUT" >> $env:GITHUB_ENV

  process-products:
    needs: detect-updates
    if: ${{ needs.detect-updates.outputs.to_process != '[]' }}
    runs-on: windows-latest

    steps:
      - name: Debugging Why `process-products` Is Not Running
        shell: pwsh
        run: |
          Write-Host "DEBUG: Checking received to_process value..."
          Write-Host "DEBUG: to_process = '${{ needs.detect-updates.outputs.to_process }}'"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET SDK 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: python -m pip install requests

      - name: Download NuGet Package
        shell: pwsh
        run: |
          $TO_PROCESS = ConvertFrom-Json "${{ needs.detect-updates.outputs.to_process }}"

          foreach ($product in $TO_PROCESS) {
              $PACKAGE_ID = $product.nuget
              $PACKAGE_VERSION = $product.version

              Write-Host "Downloading NuGet package: $PACKAGE_ID version $PACKAGE_VERSION"

              # Download NuGet package from API
              $NUPKG_URL = "https://www.nuget.org/api/v2/package/$PACKAGE_ID/$PACKAGE_VERSION"
              Invoke-WebRequest -Uri $NUPKG_URL -OutFile "packages/$PACKAGE_ID.$PACKAGE_VERSION.nupkg"

              # Extract DLL & XML
              python scripts/extract_files.py "$PACKAGE_ID" "$PACKAGE_VERSION"
          }

      - name: Generate docfx.json
        shell: pwsh
        run: |
          $TO_PROCESS = ConvertFrom-Json "${{ needs.detect-updates.outputs.to_process }}"

          foreach ($product in $TO_PROCESS) {
              python scripts/generate_docfx.py "$($product.nuget)"
              if (-not (Test-Path "workspace/docfx.json")) {
                  Write-Host "Error: docfx.json was not generated!"
                  exit 1
              }
          }

      - name: Download and Run DocFX
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/dotnet/docfx/releases/download/v2.77.0/docfx-win-x64-v2.77.0.zip" -OutFile "docfx.zip"
          Expand-Archive -Path "docfx.zip" -DestinationPath "docfx"
          docfx/docfx.exe metadata
          if (-not (Test-Path "api")) {
              Write-Host "Error: DocFX metadata generation failed!"
              exit 1
          }

      - name: Run Post-Processor
        shell: pwsh
        run: |
          python scripts/postprocessor.py "api"
          if ((Get-ChildItem "api" -Recurse | Measure-Object).Count -eq 0) {
              Write-Host "Error: No processed files found in 'api'."
              exit 1
          }

      - name: Push Processed Content to `aspose.net`
        shell: pwsh
        run: |
          python scripts/push_to_repo.py "${{ matrix.product.family }}"
          if ($LASTEXITCODE -ne 0) {
              Write-Host "Warning: Push to repository failed!"
          }
