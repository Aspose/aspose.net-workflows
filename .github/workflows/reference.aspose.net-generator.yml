name: reference.aspose.net-generator

on:
  workflow_dispatch:
    inputs:
      products:
        description: "Comma-separated list of products (e.g., Aspose.Words,Aspose.PDF) or 'all'"
        required: true
        default: "all"
  schedule:
    - cron: "0 0 1 * *" # Runs on the 1st of every month

jobs:
  detect-updates:
    runs-on: windows-latest
    outputs:
      to_process: ${{ steps.filter.outputs.to_process }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: python -m pip install requests

      - name: Fetch Latest Versions from NuGet
        id: check_versions
        run: python scripts/check_versions.py

      - name: Filter Products for Processing
        id: filter
        shell: pwsh
        run: |
          $PRODUCTS = "${{ github.event.inputs.products }}"
          if ($PRODUCTS -eq "all") {
            $PRODUCTS = (Get-Content reference/status.json | ConvertFrom-Json | Get-Member -MemberType NoteProperty | Select-Object -ExpandProperty Name) -join ","
          }

          # Run detect_updates.py to determine products needing updates
          $TO_PROCESS = python scripts/detect_updates.py "$PRODUCTS"

          # Ensure JSON output is correctly formatted
          $JSON_OUTPUT = $TO_PROCESS | ConvertTo-Json -Compress
          echo "to_process=$JSON_OUTPUT" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8

  process-products:
    needs: detect-updates
    if: ${{ needs.detect-updates.outputs.to_process != '[]' }}
    runs-on: windows-latest
    strategy:
      matrix:
        product: ${{ fromJson(needs.detect-updates.outputs.to_process) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET SDK 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: python -m pip install requests

      - name: Download NuGet Package
        shell: pwsh
        run: |
          $PACKAGE="${{ matrix.product.nuget }}"
          $VERSION=$(python scripts/check_versions.py --get-latest-version $PACKAGE)
          if (-not $VERSION) { Write-Error "Failed to get NuGet version for $PACKAGE"; exit 1 }

          $URL="https://www.nuget.org/api/v2/package/$PACKAGE/$VERSION"
          $OUTPUT="packages/$PACKAGE.$VERSION.nupkg"

          New-Item -ItemType Directory -Path packages -Force
          Invoke-WebRequest -Uri $URL -OutFile $OUTPUT -UseBasicParsing

          if (-not (Test-Path $OUTPUT)) { Write-Error "Failed to download $PACKAGE"; exit 1 }

      - name: Extract DLL & XML
        run: python scripts\extract_files.py "${{ matrix.product.nuget }}"

      - name: Generate docfx.json
        run: python scripts\generate_docfx.py "${{ matrix.product.nuget }}"

      - name: Download and Extract DocFX
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/dotnet/docfx/releases/download/v2.77.0/docfx-win-x64-v2.77.0.zip" -OutFile "docfx.zip"
          Expand-Archive -Path "docfx.zip" -DestinationPath "docfx"
          
      - name: Run DocFX Metadata
        shell: pwsh
        run: |
          .\docfx\docfx.exe metadata workspace\docfx.json --logLevel Warning

      - name: Run Post-Processor
        run: python scripts\postprocessor.py "workspace\api"

      - name: Push Processed Content to `aspose.net`
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: python scripts\push_to_repo.py "${{ matrix.product.family }}"
