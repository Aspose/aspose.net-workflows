name: reference.aspose.net-generator

on:
  workflow_dispatch:
    inputs:
      products:
        description: "Comma-separated list of products (e.g., Aspose.Words,Aspose.PDF) or 'all'"
        required: true
        default: "all"
  schedule:
    - cron: "0 0 1 * *" # Runs on the 1st of every month

jobs:
  detect-updates:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: python -m pip install requests

      - name: Fetch Latest Versions from NuGet
        id: check_versions
        run: python scripts/check_versions.py

      - name: Filter Products for Processing
        id: filter
        shell: pwsh
        run: |
          Write-Host "DEBUG: Received products input: ${{ github.event.inputs.products }}"

          $PRODUCTS = "${{ github.event.inputs.products }}"
          if ($PRODUCTS -eq "all") {
              $PRODUCTS = (Get-Content reference/status.json | ConvertFrom-Json | Get-Member -MemberType NoteProperty | Select-Object -ExpandProperty Name) -join ","
          }

          Write-Host "DEBUG: Processing products: $PRODUCTS"

          # Run detect_updates.py to determine products needing updates
          $TO_PROCESS = python scripts/detect_updates.py "$PRODUCTS" | Out-String
          $TO_PROCESS = $TO_PROCESS.Trim()

          Write-Host "DEBUG: Raw JSON from detect_updates.py:"
          Write-Host "$TO_PROCESS"

          # Ensure the logs directory exists
          mkdir logs -Force

          # Store JSON output in logs/updates.json
          if ($TO_PROCESS -ne "[]" -and $TO_PROCESS -ne "") {
              Write-Host "Saving updates to logs/updates.json"
              $TO_PROCESS | Out-File -FilePath logs/updates.json -Encoding utf8
          } else {
              Write-Host "No updates found. Creating empty logs/updates.json"
              "[]" | Out-File -FilePath logs/updates.json -Encoding utf8
          }
      
      - name: Commit and Push Updates File
        shell: pwsh
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add logs/updates.json
          git commit -m "Update detected families JSON" || echo "No changes to commit"
          git push

  process-family:
    needs: detect-updates
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read updates.json and Process Families
        shell: pwsh
        run: |
          if (-Not (Test-Path logs/updates.json)) {
              Write-Host "No logs/updates.json found. Exiting."
              exit 1
          }

          $UPDATES = Get-Content logs/updates.json -Raw | ConvertFrom-Json

          if ($UPDATES.Count -eq 0) {
              Write-Host "No updates to process."
              exit 1
          }

          foreach ($family in $UPDATES) {
              Write-Host "Processing: $($family.family)"
              
              # Download and extract package
              python scripts/extract_files.py "$($family.nuget)" "$($family.version)"

              # Generate DocFX metadata
              python scripts/generate_docfx.py "$($family.nuget)"

              # Run post-processing
              python scripts/postprocessor.py "api"

              # Push content to repository
              python scripts/push_to_repo.py "$($family.family)"
          }
