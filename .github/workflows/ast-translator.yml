name: AST Translator

on:
  workflow_dispatch:
    inputs:
      subdomain:
        description: "Target subdomain (e.g., reference.aspose.net)"
        required: true
        default: 'reference.aspose.net'
      families:
        description: "Comma-separated list of families to process (e.g., words,cells,barcode)"
        required: true
        default: 'words,cells,barcode'
      languages:
        description: "Comma-separated list of target languages (e.g., zh,es,fr)"
        required: true
        default: 'de,es,fr,ja,ko,ru,zh,ar,it,pt,pl,fa,id,cs,vi,tr,th,sv,el,uk'

jobs:
  prepare-matrix:
    name: Prepare Family-Language Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Convert families and languages inputs to JSON array of objects
        id: set_matrix
        shell: bash
        run: |
          # Split and trim families and languages inputs
          IFS=',' read -ra FAM_LIST <<< "${{ inputs.families }}"
          IFS=',' read -ra LANG_LIST <<< "${{ inputs.languages }}"
          elements=()
          for fam in "${FAM_LIST[@]}"; do
            fam="$(echo -n "$fam" | xargs)"
            if [[ -z "$fam" ]]; then continue; fi
            for lang in "${LANG_LIST[@]}"; do
              lang="$(echo -n "$lang" | xargs)"
              if [[ -z "$lang" ]]; then continue; fi
              elements+=("{\"family\": \"${fam}\", \"language\": \"${lang}\"}")
            done
          done
          json="[$(IFS=,; echo "${elements[*]}")]"
          echo "matrix=$json" >> $GITHUB_OUTPUT

  translate:
    name: Translate AST Files
    needs: prepare-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.prepare-matrix.outputs.matrix) }}
    permissions:
      contents: write
    steps:
      - name: Checkout aspose.net repository
        uses: actions/checkout@v3
        with:
          repository: Aspose/aspose.net
          path: aspose-net
          token: ${{ secrets.REPO_TOKEN }}
          fetch-depth: 0

      - name: Checkout translationcache repository
        uses: actions/checkout@v3
        with:
          repository: smallize/translationcache
          path: translationcache
          token: ${{ secrets.REPO_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch transformers sentencepiece

      - name: Configure Git Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Start auto-commit watchdog for translationcache
        run: |
          #!/bin/bash
          set -e
          # Maximum runtime: 21600 seconds (6 hours)
          MAX_RUNTIME=21600
          # Trigger auto-commit 30 minutes (1800 seconds) before timeout.
          COMMIT_BUFFER=1800
          SLEEP_DURATION=$(( MAX_RUNTIME - COMMIT_BUFFER ))
          echo "Auto-commit will trigger in $SLEEP_DURATION seconds."
          (
            sleep $SLEEP_DURATION
            echo "Auto-commit triggered; performing merge and push..."
            LANG="${{ matrix.language }}"
            echo "Processing language $LANG"
            LOCAL_FILE="aspose-net/translation/${LANG}_cache.json"
            REMOTE_FILE="translationcache/${LANG}_cache.json"
            if [ ! -s "$LOCAL_FILE" ]; then
              echo "Local cache file $LOCAL_FILE is empty. Skipping merge for language $LANG."
              exit 0
            fi
            if [ ! -f "$REMOTE_FILE" ]; then
              echo "{}" > "$REMOTE_FILE"
            fi

            # Merge remote and local cache files: remote values are merged with local changes
            python aspose-net/scripts/json-merger/merge.py --input1 "$REMOTE_FILE" --input2 "$LOCAL_FILE" --output "$REMOTE_FILE"
            python aspose-net/scripts/json-merger/validate.py --file "$REMOTE_FILE" --fix

            cd translationcache
            for attempt in {1..10}; do
              echo "Auto-commit attempt #$attempt"
              git fetch origin
              git reset --hard origin/"${GITHUB_REF#refs/heads/}"
              # Merge remote and local cache files again
              python aspose-net/scripts/json-merger/merge.py --input1 "$REMOTE_FILE" --input2 "$LOCAL_FILE" --output "$REMOTE_FILE"
              python aspose-net/scripts/json-merger/validate.py --file "$REMOTE_FILE" --fix
              git add *.json
              git commit -m "Auto-commit merged translation cache for language: $LANG" || echo "Nothing to commit"
              if git push origin "${GITHUB_REF#refs/heads/}"; then
                echo "Auto-commit push successful"
                exit 0
              else
                echo "Push failed, retrying in 5 seconds..."
                sleep 5
              fi
            done
            echo "Auto-commit push failed after multiple attempts"
            exit 1
          ) &

      - name: Run AST Translation for Family ${{ matrix.family }} and Language ${{ matrix.language }}
        run: |
          echo "Translating for subdomain: ${{ inputs.subdomain }}, family: ${{ matrix.family }}, language: ${{ matrix.language }}"
          # Construct the input path assuming the source content is under the English folder ("en")
          INPUT_PATH="aspose-net/ast/${{ inputs.subdomain }}/${{ matrix.family }}/en"
          python aspose-net/scripts/ast-translator/ast-translator.py \
            --input "$INPUT_PATH" \
            --cache_folder aspose-net/translation \
            --device auto \
            --target_languages "${{ matrix.language }}" \
            --batch_size 6 \
            --existing_cache_folder translationcache

      - name: Final Merge and Push Updated Translation Cache
        env:
          GIT_AUTHOR_NAME: GitHub Actions
          GIT_AUTHOR_EMAIL: actions@github.com
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          #!/bin/bash
          set -e
          LANG="${{ matrix.language }}"
          echo "Final merge and push process starting for language: $LANG"
          LOCAL_FILE="aspose-net/translation/${LANG}_cache.json"
          REMOTE_FILE="translationcache/${LANG}_cache.json"
          if [ ! -s "$LOCAL_FILE" ]; then
            echo "Local cache file $LOCAL_FILE is empty. Skipping merge for language $LANG."
            exit 0
          fi
          if [ ! -f "$REMOTE_FILE" ]; then
            echo "{}" > "$REMOTE_FILE"
          fi

          for attempt in {1..10}; do
            echo "Final commit attempt #$attempt"
            # Reset local translationcache repo to remote state
            git fetch origin
            git reset --hard origin/"${GITHUB_REF#refs/heads/}"
            # Merge remote file with local changes
            python aspose-net/scripts/json-merger/merge.py --input1 "$REMOTE_FILE" --input2 "$LOCAL_FILE" --output "$REMOTE_FILE"
            python aspose-net/scripts/json-merger/validate.py --file "$REMOTE_FILE" --fix
            cd translationcache
            git add *.json
            git commit -m "Translation cache for ${{ inputs.subdomain }}, family: ${{ matrix.family }}, language: $LANG" || echo "Nothing to commit"
            if git push origin "${GITHUB_REF#refs/heads/}"; then
              echo "Final push successful"
              exit 0
            else
              echo "Push failed, retrying in 5 seconds..."
              sleep 5
            fi
          done
          echo "Final push failed after multiple attempts"
          exit 1
